
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: servers.minecraft.tgik.io
spec:
  group: minecraft.tgik.io
  names:
    kind: Server
    plural: servers
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Server is the Schema for the servers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ServerSpec defines the desired state of Server
          properties:
            EULA:
              description: Do you agree to the EULA?
              type: boolean
            allowList:
              description: The list of users that can join. If this is empty then
                the server is open to the public.
              items:
                type: string
              type: array
            ops:
              description: The list of users that are ops/admin on the server
              items:
                type: string
              type: array
            serverName:
              description: The name of the server when a user connects
              type: string
            serverType:
              description: The type of Minecraft Server we want to run. Includes VANILLA,
                PAPER, etc.
              type: string
          type: object
        status:
          description: ServerStatus defines the observed state of Server
          properties:
            podName:
              type: string
            running:
              type: boolean
          type: object
      type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
